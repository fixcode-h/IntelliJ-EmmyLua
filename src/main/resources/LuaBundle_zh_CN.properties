#
# Copyright (c) 2017. tangzx(love.tangzx@qq.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
livetemplate.description.func=function functionName() end
livetemplate.description.lfunc=local function functionName() end
livetemplate.description.closure=function() end
livetemplate.description.for-loop=for i = 1, 10 do end
livetemplate.description.if-end=if expr then end
livetemplate.description.if-else=if expr then else end
livetemplate.description.else-if=elseif expr then
livetemplate.description.for-i=for i, v in ipairs(expr) do end
livetemplate.description.for-p=for k, v in pairs(expr) do end
livetemplate.description.param_sig=参数签名
inspection.duplicate_class=在文件中发现重复的类: {0}
inspection.empty_for=空的for循环体
inspection.empty_do=空的do语句体
inspection.empty_while=空的while循环体
run.attach.start_info=尝试附加到 \"{0}\" 进程ID:{1} 使用 {2} 调试器。
run.attach.launch_info=尝试启动程序:{0} 使用 {1} 调试器。
ui.luacheck.command_line=命令行
ui.luacheck.name=LuaCheck
ui.luacheck.download=下载 LuaCheck
ui.luacheck.command_line_options=命令行选项
ui.settings.constructor_names=构造函数名称(&C):
ui.settings.strict_doc=严格文档(&D)
ui.settings.smart_close_end=智能关闭 'end'(&S)
ui.settings.recognize_global_name_as_type=将全局名称识别为类型
ui.settings.enable_generic=启用泛型
ui.settings.additional_root=Lua 附加源码根目录
ui.settings.show_words=在文件中显示单词(&W)
ui.settings.type_safety=类型安全
ui.settings.enforce_type_safety=强制类型安全
ui.settings.strict_nil_checks=严格nil检查
ui.settings.require_like_function_names=类似require的函数名称(&R):
action.sort.alphabetically=按字母顺序排序
action.sort.alphabetically_desc=按字母顺序排序

# Code Style Settings
codestyle.spacing.table=表格间距
codestyle.spacing.table.around_assign=表格赋值周围
codestyle.spacing.table.around_comma=表格逗号周围
codestyle.spacing.function_call=函数调用间距
codestyle.spacing.function_call.around_parentheses=函数调用括号周围
codestyle.spacing.function_call.around_comma=函数调用逗号周围
codestyle.spacing.comment=注释间距
codestyle.spacing.comment.before_line=行注释前
codestyle.spacing.comment.after_line=行注释后

codestyle.blank_lines.require=Require语句
codestyle.blank_lines.require.before=require语句前
codestyle.blank_lines.require.after=require语句后
codestyle.blank_lines.function=函数
codestyle.blank_lines.function.before=函数前
codestyle.blank_lines.function.after=函数后

codestyle.wrapping.table=表格对齐
codestyle.wrapping.table.align_fields=对齐表格字段
codestyle.wrapping.table.wrap_after_comma=逗号后换行
codestyle.wrapping.comment=注释对齐
codestyle.wrapping.comment.align_line=对齐行注释
codestyle.wrapping.loop=循环语句对齐
codestyle.wrapping.loop.align_body=对齐循环体
codestyle.wrapping.function_call=函数调用对齐
codestyle.wrapping.function_call.align_parameters=对齐函数参数
codestyle.wrapping.function_call.wrap_after_comma=函数调用逗号后换行

# Action texts
action.copy_lua_require_path=复制Lua Require路径
action.copy_lua_relative_path=复制Lua相对路径